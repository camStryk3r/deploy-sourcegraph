apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Postgres database for various data.
    kubectl.kubernetes.io/default-container: pgsql
  labels:
    app.kubernetes.io/component: pgsql
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: pgsql
  namespace: sourcegraph-dev
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pgsql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: pgsql
        deploy: sourcegraph
        group: backend
    spec:
      containers:
      - env: null
        image: index.docker.io/sourcegraph/postgres-12.6-alpine:3.32.0@sha256:2fa4e79f63945eeeac8f55f0f72f9d8e16005a8f50fd39d8d165dcec3aefe707
        livenessProbe:
          exec:
            command:
            - /liveness.sh
          initialDelaySeconds: 15
        name: pgsql
        ports:
        - containerPort: 5432
          name: pgsql
        readinessProbe:
          exec:
            command:
            - /ready.sh
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: "4"
            memory: 4Gi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /data
          name: disk
        - mountPath: /conf
          name: pgsql-conf
        - mountPath: /dev/shm
          name: dshm
      - env:
        - name: DATA_SOURCE_NAME
          value: postgres://sg:@localhost:5432/?sslmode=disable
        - name: PG_EXPORTER_EXTEND_QUERY_PATH
          value: /config/queries.yaml
        image: index.docker.io/sourcegraph/postgres_exporter:3.32.0@sha256:52273d0f501e7cd39ccf93188e972ce1170d14f07d08c39318f9147805c07560
        name: pgsql-exporter
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
      initContainers:
      - command:
        - sh
        - -c
        - if [ -d /data/pgdata-12 ]; then chmod 750 /data/pgdata-12; fi
        image: index.docker.io/sourcegraph/alpine-3.12:3.32.0@sha256:79eb4c4e6998f2ca6d9d903c07a6c7894d55d342ac4919e7a017425406e7fc04
        name: correct-data-dir-permissions
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /data
          name: disk
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 120
      volumes:
      - name: disk
        persistentVolumeClaim:
          claimName: pgsql
      - configMap:
          defaultMode: 511
          name: pgsql-conf
        name: pgsql-conf
      - emptyDir:
          medium: Memory
          sizeLimit: 1G
        name: dshm
